# This Deployment manifest defines:
# - single-replica deployment of the container image, with label "app: techpod-discord-digest"
# - Pod exposes port 8080
# - specify PORT environment variable to the container process
# Syntax reference https://kubernetes.io/docs/concepts/configuration/overview/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: techpod-discord-digest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: techpod-discord-digest
  template:
    metadata:
      labels:
        app: techpod-discord-digest
    spec:
      serviceAccountName: default
      # Use the official cloud SDK image to grab the discord bot's service account key:
      initContainers:
      - name: secrets
        image: gcr.io/google.com/cloudsdktool/cloud-sdk
        command: ["/bin/bash"]
        # args: ["-c", "gcloud auth list; sleep 120"] # DEBUG ONLY
        # args: ["-c", "gcloud secrets versions access latest --secret=\"techpod-discord-digest-dev-app-runner-key\") >> /data/techpod_runner_sa_secret.json; tail -n 500 /data/techpod_runner_sa_secret.json; sleep 120"] # DEBUG ONLY - ROTATE KEYS AFTER USING AS PK WILL BE STORED IN LOGS
        args: ["-c", "gcloud secrets versions access latest --secret=\"techpod-discord-digest-dev-app-runner-key\" --project techpod-discord-digest > /data/techpod_runner_sa_secret.json"]
        volumeMounts:
        - name: config-data
          mountPath: /data
      containers:
      - name: bot-client
        image: us-central1-docker.pkg.dev/techpod-discord-digest/techpod-discord-digest-dev-artifact-registry-01/techpod_digest_bot
        resources:
          requests:
            memory: "128Mi"
            cpu: "150m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: config-data
          mountPath: /data
      volumes:
      - name: config-data
        emptyDir: {}